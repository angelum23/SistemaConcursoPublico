// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistemaConcurso.PgRepository.Base;

#nullable disable

namespace SistemaConcurso.PgRepository.Migrations
{
    [DbContext(typeof(PgDbContext))]
    [Migration("20251003173747_FixForeignKeys")]
    partial class FixForeignKeys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Exams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdUser")
                        .HasColumnType("integer")
                        .HasColumnName("iduser");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastupdatedate");

                    b.Property<string>("Notice")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("notice");

                    b.Property<string>("NoticeDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("noticedescription");

                    b.Property<string>("NoticeTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("noticetitle");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registerdate");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean")
                        .HasColumnName("removed");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("exams");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.JobRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("IdExam")
                        .HasColumnType("integer")
                        .HasColumnName("idexam");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastupdatedate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registerdate");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean")
                        .HasColumnName("removed");

                    b.HasKey("Id");

                    b.HasIndex("IdExam");

                    b.ToTable("jobroles");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.LessonAssessments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdLesson")
                        .HasColumnType("integer")
                        .HasColumnName("idlesson");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastupdatedate");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registerdate");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean")
                        .HasColumnName("removed");

                    b.Property<int>("RetriesCount")
                        .HasColumnType("integer")
                        .HasColumnName("retriescount");

                    b.HasKey("Id");

                    b.HasIndex("IdLesson");

                    b.ToTable("lessonassessments");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Lessons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("Done")
                        .HasColumnType("boolean")
                        .HasColumnName("done");

                    b.Property<int>("IdModule")
                        .HasColumnType("integer")
                        .HasColumnName("idmodule");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastupdatedate");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registerdate");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean")
                        .HasColumnName("removed");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("IdModule");

                    b.ToTable("lessons");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.ModuleAssessments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdModule")
                        .HasColumnType("integer")
                        .HasColumnName("idmodule");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastupdatedate");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registerdate");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean")
                        .HasColumnName("removed");

                    b.Property<int>("RetriesCount")
                        .HasColumnType("integer")
                        .HasColumnName("retriescount");

                    b.HasKey("Id");

                    b.HasIndex("IdModule");

                    b.ToTable("moduleassessments");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Modules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("IdRoadmap")
                        .HasColumnType("integer")
                        .HasColumnName("idroadmap");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastupdatedate");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registerdate");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean")
                        .HasColumnName("removed");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("IdRoadmap");

                    b.ToTable("modules");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Questions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CorrectOption")
                        .HasColumnType("integer")
                        .HasColumnName("correctoption");

                    b.Property<int?>("IdLessonAssessment")
                        .HasColumnType("integer")
                        .HasColumnName("idlessonassessment");

                    b.Property<int?>("IdModuleAssessment")
                        .HasColumnType("integer")
                        .HasColumnName("idmoduleassessment");

                    b.Property<int?>("IdRoadmapAssessment")
                        .HasColumnType("integer")
                        .HasColumnName("idroadmapassessment");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastupdatedate");

                    b.Property<string>("OptionA")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("optiona");

                    b.Property<string>("OptionB")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("optionb");

                    b.Property<string>("OptionC")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("optionc");

                    b.Property<string>("OptionD")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("optiond");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<int>("Origin")
                        .HasColumnType("integer")
                        .HasColumnName("origin");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("question");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registerdate");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean")
                        .HasColumnName("removed");

                    b.Property<int?>("SelectedOption")
                        .HasColumnType("integer")
                        .HasColumnName("selectedoption");

                    b.HasKey("Id");

                    b.HasIndex("IdLessonAssessment");

                    b.HasIndex("IdModuleAssessment");

                    b.HasIndex("IdRoadmapAssessment");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.RefreshTokens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expires");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastupdatedate");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registerdate");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean")
                        .HasColumnName("removed");

                    b.Property<string>("ReplacedByTokenHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("replacedbytokenhash");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("revoked");

                    b.Property<string>("TokenHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tokenhash");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("refreshtokens");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.RoadmapAssessments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdRoadmap")
                        .HasColumnType("integer")
                        .HasColumnName("idroadmap");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastupdatedate");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registerdate");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean")
                        .HasColumnName("removed");

                    b.Property<int>("RetriesCount")
                        .HasColumnType("integer")
                        .HasColumnName("retriescount");

                    b.HasKey("Id");

                    b.HasIndex("IdRoadmap");

                    b.ToTable("roadmapquestions");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Roadmaps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdExam")
                        .HasColumnType("integer")
                        .HasColumnName("idexam");

                    b.Property<int?>("IdSelectedJobRole")
                        .HasColumnType("integer")
                        .HasColumnName("idselectedjobrole");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastupdatedate");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registerdate");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean")
                        .HasColumnName("removed");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("IdExam");

                    b.HasIndex("IdSelectedJobRole");

                    b.ToTable("roadmaps");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("fullname");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastupdatedate");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registerdate");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean")
                        .HasColumnName("removed");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Exams", b =>
                {
                    b.HasOne("SistemaConcurso.Domain.Entities.Users", "User")
                        .WithMany("Exams")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.JobRoles", b =>
                {
                    b.HasOne("SistemaConcurso.Domain.Entities.Exams", "Exam")
                        .WithMany("JobRoles")
                        .HasForeignKey("IdExam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.LessonAssessments", b =>
                {
                    b.HasOne("SistemaConcurso.Domain.Entities.Lessons", "Lesson")
                        .WithMany("LessonAssessment")
                        .HasForeignKey("IdLesson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Lessons", b =>
                {
                    b.HasOne("SistemaConcurso.Domain.Entities.Modules", "Module")
                        .WithMany("Lessons")
                        .HasForeignKey("IdModule")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.ModuleAssessments", b =>
                {
                    b.HasOne("SistemaConcurso.Domain.Entities.Modules", "Module")
                        .WithMany("ModuleAssessment")
                        .HasForeignKey("IdModule")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Modules", b =>
                {
                    b.HasOne("SistemaConcurso.Domain.Entities.Roadmaps", "Roadmap")
                        .WithMany("Modules")
                        .HasForeignKey("IdRoadmap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roadmap");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Questions", b =>
                {
                    b.HasOne("SistemaConcurso.Domain.Entities.LessonAssessments", "LessonAssessment")
                        .WithMany("Questions")
                        .HasForeignKey("IdLessonAssessment");

                    b.HasOne("SistemaConcurso.Domain.Entities.ModuleAssessments", "ModuleAssessment")
                        .WithMany("Questions")
                        .HasForeignKey("IdModuleAssessment");

                    b.HasOne("SistemaConcurso.Domain.Entities.RoadmapAssessments", "RoadmapAssessment")
                        .WithMany("Questions")
                        .HasForeignKey("IdRoadmapAssessment");

                    b.Navigation("LessonAssessment");

                    b.Navigation("ModuleAssessment");

                    b.Navigation("RoadmapAssessment");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.RoadmapAssessments", b =>
                {
                    b.HasOne("SistemaConcurso.Domain.Entities.Roadmaps", "Roadmap")
                        .WithMany("RoadmapAssessment")
                        .HasForeignKey("IdRoadmap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roadmap");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Roadmaps", b =>
                {
                    b.HasOne("SistemaConcurso.Domain.Entities.Exams", "Exam")
                        .WithMany("Roadmaps")
                        .HasForeignKey("IdExam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaConcurso.Domain.Entities.JobRoles", "SelectedJobRole")
                        .WithMany()
                        .HasForeignKey("IdSelectedJobRole");

                    b.Navigation("Exam");

                    b.Navigation("SelectedJobRole");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Exams", b =>
                {
                    b.Navigation("JobRoles");

                    b.Navigation("Roadmaps");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.LessonAssessments", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Lessons", b =>
                {
                    b.Navigation("LessonAssessment");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.ModuleAssessments", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Modules", b =>
                {
                    b.Navigation("Lessons");

                    b.Navigation("ModuleAssessment");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.RoadmapAssessments", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Roadmaps", b =>
                {
                    b.Navigation("Modules");

                    b.Navigation("RoadmapAssessment");
                });

            modelBuilder.Entity("SistemaConcurso.Domain.Entities.Users", b =>
                {
                    b.Navigation("Exams");
                });
#pragma warning restore 612, 618
        }
    }
}
